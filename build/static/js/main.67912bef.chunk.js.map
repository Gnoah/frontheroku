{"version":3,"sources":["Component/postWithUpload_frontToBack.js","Component/coeur/coeur.jsx","Component/comment/Displaycoms.jsx","Component/comment/Addcoms.jsx","Component/List.jsx","Component/AfficheProfil.js","App.js","serviceWorker.js","index.js"],"names":["PostFrontToBack","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","nom","email","password","photo_profil","onChange","bind","assertThisInitialized","handleUploadImage","event","setState","defineProperty","target","name","value","ev","_this2","preventDefault","data","FormData","append","uploadInput","files","fetch","method","body","then","response","json","concat","console","log","_this3","react_default","a","createElement","onSubmit","mdbreact_esm","label","type","icon","size","ref","React","Component","Coeur","count","id","onClick","addOne","AffCom","coms","length","map","user","Comment","_useState","useState","_useState2","slicedToArray","setCom","_useState3","_useState4","compt","setCompt","confirmAlert","customUI","_ref","onClose","className","b","test","document","forms","elements","addCom","getElementById","innerHTML","placeholder","commentaire","Displaycoms","ListTous","profil","axios","get","catch","error","obj","_React$createElement","md","src","alt","Addcoms","coeur_coeur","AfficheProfil","location","pathname","_id","nam","mail","mdp","photo","width","height","liste","App","BrowserRouter","Route","path","component","List","exact","Boolean","window","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67912bef.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { MDBInput } from \"mdbreact\";\n\nclass PostFrontToBack extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n     nom: '',\n     email:'',\n      password:'',\n      photo_profil:''\n\n    };\n    this.onChange = this.onChange.bind(this)\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n\n\n\n  onChange(event) {\n    this.setState({\n        [event.target.name]: event.target.value\n    })\n}\n\n\n\n\n\n  handleUploadImage(ev) {\n    ev.preventDefault();\n\n    const data = new FormData();\n    data.append('photo_profil', this.uploadInput.files[0]);\n    data.append('nom',this.state.nom);\n    data.append('email',this.state.email);\n    data.append('password',this.state.password)\n\n    fetch('https://mandeha18.herokuapp.com/profil', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        this.setState({ photo_profil: `https://mandeha18.herokuapp.com/profil/${body.photo_profil}` });\n        console.log('ity ilay body.fil',body.photo_profil);\n        \n      });\n      fetch('https://mandeha18.herokuapp.com/profil', {\n      method: 'GET',\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        this.setState({ photo_profil: `https://mandeha18.herokuapp.com/profil/${body.photo_profil}` });\n        console.log('ity ilay body.fil',body.photo_profil);\n        \n      });\n    });\n    });\n    \n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleUploadImage}>\n        <MDBInput label=\"Nom\" type=\"text\" icon=\"user\" value={this.state.value} onChange={this.onChange}\n          name=\"nom\" size=\"sm\"/>\n        <MDBInput label=\"Email\" type=\"email\" value={this.state.value} onChange={this.onChange}\n          name=\"email\"  size=\"sm\" />\n        <MDBInput label=\"Password\" type=\"password\" value={this.state.value} onChange={this.onChange}\n          name=\"password\"  size=\"sm\" /><br></br>\n          <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" name=\"photo_profil\"/>\n       \n          <button>Ajouter</button>\n      </form>\n    );\n  }\n}\n\nexport default PostFrontToBack;\n","import React, { Component } from 'react'\nimport './coeur.css'\n\nclass Coeur extends Component {\n    constructor(){\n        super();\n        this.state ={\n            count:0\n        }\n    }\naddOne(){\n    this.setState({\n        count: this.state.count + 1\n    });\n}\n    render(){\n        return(\n            <div>\n                <span ></span> <label id=\"coeur\">{this.state.count}❤<input type=\"button\"\n                onClick = { () => this.addOne()} /></label>\n            </div>\n        )\n} \n}\n\nexport default Coeur;\n","import React from 'react'\n\nconst AffCom = props =>(\n<div>\n        {props.coms.length > 0 ? (\n          props.coms.map(user => (\n                \n    <div>{user}<hr/></div>\n                \n           ))\n        ) : (\n \"\")} \n </div>\n    \n)\nexport default AffCom","import React, { useState } from 'react'\nimport { confirmAlert } from 'react-confirm-alert'; \nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AffCom from './Displaycoms'\nimport './Addcom.css'\n\n\nconst Comment= props => {\n    const initialFormState = []\n    const [ coms, setCom ] = useState(initialFormState)\n    const [ compt, setCompt ] = useState(0)\n    const addCom = (coms,test) => {\n      setCom(coms.concat([test]))\n\n    }\n    \n\n   \n    return(\n\n            <button\n            onClick={()=>{\n                confirmAlert({\n                    customUI: ({ onClose }) => {\n                      return (\n                        <div id=\"bt\" className='custom-ui'>\n                          <div className=\"fermer\">\n                            <button id=\"flot\" onClick={onClose}>X</button>\n                          </div>\n                          <div>\n                          <form id='coms'\n                            onSubmit={\n                              (b)=>{\n                                b.preventDefault()\n                                var test=document.forms['coms'].elements['input'].value\n                               //  setCom(coms.concat([test]))\n                               addCom(coms,test)\n                                document.getElementById('io').innerHTML+=test+'<br/>'\n                                document.getElementById('entre').value=''\n                                setCompt(compt+1)\n                              }\n                            }\n                          >\n                              \n                              <input name='input' type=\"text\" id='entre' placeholder={coms.commentaire}/>\n\n                              <button id=\"com\">comment</button>\n                              \n                          </form>\n                          </div>\n                          <div id='io'></div>\n                          <AffCom coms={coms}/>\n                        </div>\n                      );\n                    }\n                  });\n            }}\n            > \n            comment {compt}</button>     \n    )   \n        \n}\n\n\n\nexport default Comment","\nimport React, { Component } from 'react';\nimport { MDBRow, MDBCol } from \"mdbreact\";\nimport './Carte.css'\nimport Coeur from './coeur/coeur'\nimport Coms from './comment/Addcoms'\nimport axios from 'axios';\n//import Delete from './comment/Delete'\n\n\nexport default class ListTous extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { profil: [] };\n\n    }\n    componentDidMount() {\n        axios.get('https://mandeha18.herokuapp.com/profil')\n            .then(response => {\n                console.log('i am a response', response)\n                this.setState({ profil: response.data });\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    render() {\n        return (\n            <MDBRow>\n                <div className=\"card-deck\">    \n                    {this.state.profil.length > 0 ? (  \n                        this.state.profil.map(obj => (\n                            <MDBCol md=\"4\" className=\"colone\">\n                            <div className=\"card\">\n                                {/* <Delete/> */}\n                                <img src={'https://mandeha18.herokuapp.com/user/'+obj.photo_profil} alt=\"pdp\" alt=\"upload images\" width=\" 250\" height=\"250\"/>\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">{obj.nom}</h5>\n                                    <p>{obj.email}</p>\n                                </div>\n                                <div className=\"card-footer\">\n                                    <Coms/>     \n                                    <Coeur /> \n                                </div>\n                            </div>  \n                            </MDBCol>    \n                            ))\n                ) : ''}  \n                \n                </div>\n            </MDBRow>\n        );\n    }\n}","\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nexport default class AfficheProfil extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { profil: [] };\n\n  }\n  componentDidMount() {\n    axios.get('http://localhost:8080' + this.props.location.pathname)\n      .then(response => {\n        console.log('i am a response', response)\n        this.setState({ id: response.data._id });\n        this.setState({ nam: response.data.nom });\n        console.log('i am a response', response.data.email)\n        this.setState({ mail: response.data.email });\n        this.setState({ mdp: response.data.password });\n        this.setState({ photo: response.data.photo_profil });\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  liste() {\n      return(\n          <div className=\"table-responsive\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <h2>profil</h2>\n                </tr>\n                <tr>\n                  <th>ID</th>\n                  <th>NOM</th>\n                  <th>EMAIL</th>\n                  <th>PASSWORD</th>\n                  <th>PHOTO</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{this.state.id}</td>\n                  <td>{this.state.nam}</td>\n                  <td>{this.state.mail}</td>\n                  <td>{this.state.mdp}</td>\n                  <td><img  alt=\"pdp\" width=\"50px\" height=\"50px\" src={'http://localhost:8080/user/'+this.state.photo}/></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n      )\n\n  }\n  render() {\n    return (\n      <div>\n        {this.liste()}\n      </div>\n    );\n  }\n}","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { MDBContainer} from \"mdbreact\";\nimport PostFrontToBack from './Component/postWithUpload_frontToBack';\nimport List from './Component/List'\nimport AfficheProfil from './Component/AfficheProfil'\n class App extends Component {\n  render() {\n    return (\n      <Router>\n        <MDBContainer>\n          <div className=\"container\">\n            <Route path=\"/\" component={PostFrontToBack} />\n            <Route path=\"/\" component={List} />\n            <Route path=\"/profil/:profilId\" exact component={AfficheProfil} />\n          </div>\n        </MDBContainer>\n      \n    </Router>     \n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}